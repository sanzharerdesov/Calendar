{"version":3,"sources":["lib/format-error-messages.js","store/calendar.js","constants/messages.js","models/calendars.js","store/index.js","lib/service-worker.js","components/UI/Footer.js","components/UI/PageTitle.js","components/Templates/Dashboard.js","components/CalendarUIHeader/CalendarUIHeader.js","components/CalendarUIWeeks/CalendarUIWeeks.js","components/CalendarUIDays/DayComponent.js","components/CalendarUIDays/AddTask.js","components/CalendarUIDays/CalendarUIDays.js","components/CalendarFooter/CalendarFooter.js","components/CalendarUI.js","components/UI/Error.js","routes/index.js","components/UI/Loading.js","index.js"],"names":["error","errors","Object","entries","forEach","v","join","Error","message","selectedDate","Date","savedData","eventsNumberInMonth","userInput","email","successMessages","errorMessages","namespace","state","initialState","effects","dispatch","save","data","keys","length","HandleErrorMessage","reducers","replaceUserInput","payload","changeMonth","d","setMonth","getMonth","filter","item","moment","date","format","changeDateParam","index","map","idx","push","taskTime","taskName","taskDescription","removeTask","splice","removeAllEvents","remove","persistPlugin","createPersistPlugin","version","storage","blacklist","loadingPlugin","createLoadingPlugin","configureStore","store","init","models","redux","middlewares","plugins","persistor","getPersistor","Boolean","window","location","hostname","match","Footer","className","Container","Row","Col","PageTitle","title","Jumbotron","defaultProps","Template","pageTitle","children","noPadding","Helmet","CalendarUIHeader","val","this","props","onChangeMonth","Fragment","md","style","display","flexDirection","justifyContent","icon","faChevronLeft","onClick","onMonthChange","cursor","faChevronRight","Component","connect","calendars","CalendarUIWeeks","initialData","DayComponent","setState","curDate","AddTask","taskDate","name","target","value","closeModal","ref","type","onChange","handleChange","startDate","start","end","total","isShowModal","CalendarUIDays","refreshState","prevProps","prevState","snapshot","setDate","daysInMonth","getFullYear","dif","weekday","getDate","iMonth","iYear","Array","Math","ceil","jitem","j","key","i","onDayClick","calcDate","calcDay","isSameDate","saveTask","taskDesc","CalendarFooter","withRouter","content","size","offset","Index","path","exact","component","Calendar","render","Loading","Progress","bar","animated","Root","loading","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c0f94ad.chunk.js","sourcesContent":["/**\n * Create a readable error message for the front-end user\n */\nexport default (error) => {\n  /*\n    For an error response like:\n    {\n      \"message\": \"422 Unprocessable Entity\",\n      \"errors\": {\n        \"email\": [\n          \"The email must be a valid email address.\"\n        ]\n      }\n    }\n   */\n  if (error && error.errors) {\n    let errors = '';\n    Object.entries(error.errors).forEach((v) => {\n      errors += v[1].join(', ');\n    });\n    return Error(errors);\n  }\n\n  /*\n    For an error response like:\n    {\n      \"error\": {\n        \"message\": \"403 Forbidden\",\n        \"status_code\": 403\n      }\n    }\n   */\n  if (error && error.message) {\n    return Error(error.message);\n  }\n\n  // When an Error - return the error\n  if (error instanceof Error) {\n    return error;\n  }\n\n  // Otherwise create an error\n  return new Error('Uh oh - something happened');\n};\n","export default {\n  selectedDate: new Date(),\n  savedData: [],\n  eventsNumberInMonth: 0,\n  userInput: { email: '' },\n};\n","export const generalMessages = {};\n\nexport const successMessages = {\n  // Defaults\n  defaultForm: 'Success - Form Saved',\n\n  // Member\n  login: 'You are now logged in',\n  signUp: 'You are now signed up. Please login to continue.',\n  forgotPassword: 'Password reset. Please check your email.',\n};\n\nexport const errorMessages = {\n  // Defaults\n  default: 'Hmm, an unknown error occured',\n  timeout: 'Server Timed Out. Check your internet connection',\n  invalidJson: 'Response returned is not valid JSON',\n  missingData: 'Missing data',\n\n  // Member\n  memberNotAuthd: 'You need to be logged in, to update your profile',\n  memberExists: 'Member already exists',\n  missingFirstName: 'First name is missing',\n  missingLastName: 'Last name is missing',\n  missingEmail: 'Email is missing',\n  missingPassword: 'Password is missing',\n  passwordsDontMatch: 'Passwords do not match',\n\n  // Articles\n  articlesEmpty: 'No articles found',\n  articles404: 'This article could not be found',\n};\n","import HandleErrorMessage from '../lib/format-error-messages';\nimport initialState from '../store/calendar';\nimport { errorMessages, successMessages } from '../constants/messages';\nimport moment from \"moment\";\n\nexport default {\n  namespace: 'calendars',\n\n  /**\n   *  Initial state\n   */\n  state: initialState,\n\n  /**\n   * Effects/Actions\n   */\n  effects: (dispatch) => ({\n    /**\n     * Save date to redux store\n     * @param {obj} data\n     * @returns {Promise[obj]}\n     */\n    async save(data) {\n      try {\n        if (Object.keys(data).length < 1) {\n          throw new Error({ message: errorMessages.missingData });\n        }\n\n        // dispatch.calendar.replaceUserInput(data);\n        return successMessages.defaultForm; // Message for the UI\n      } catch (error) {\n        throw HandleErrorMessage(error);\n      }\n    },\n  }),\n\n  /**\n   * Reducers\n   */\n  reducers: {\n    /**\n     * Save form data\n     * @param {obj} state\n     * @param {obj} payload\n     */\n    replaceUserInput(state, payload) {\n      return {\n        ...state,\n        userInput: payload,\n      };\n    },\n\n    changeMonth(state, payload) {\n      if(payload===0){\n        state.selectedDate = new Date();\n      }else {\n        let d = new Date(state.selectedDate);\n        d.setMonth(d.getMonth() + payload);\n        state.selectedDate = d;\n      }\n      state.eventsNumberInMonth = state.savedData.filter(item=>((moment(item.date, \"DD-MM-YYYY\").format(\"MM-YYYY\")+'')===(moment(state.selectedDate).format(\"MM-YYYY\")+''))).length;\n      return {\n        ...state\n      }\n    },\n\n    changeDateParam(state, payload) {\n      if(payload){\n        let index = -1;\n        state.savedData.map((item,idx)=> {\n          if(item.date === (moment(payload.date).format(\"DD-MM-YYYY\") + '')){\n            index= idx;\n          }\n          return index;\n        });\n        if(index===-1){\n          const d = moment(payload.date).format(\"DD-MM-YYYY\");\n          state.savedData.push({date:d, taskTime: \"\", taskName: \"\", taskDescription: \"\"});\n        }else{\n          if(payload[\"name\"]){\n            state.savedData[index][payload[\"name\"]]=payload[\"val\"];\n          }\n        }\n      }\n      state.eventsNumberInMonth = state.savedData.filter(item=>((moment(item.date, \"DD-MM-YYYY\").format(\"MM-YYYY\")+'')===(moment(state.selectedDate).format(\"MM-YYYY\")+''))).length;\n      return {\n        ...state\n      }\n    },\n\n    removeTask(state, payload) {\n      if(payload){\n        let index = -1;\n        state.savedData.map((item,idx)=> {\n          if(item.date === (moment(payload.date).format(\"DD-MM-YYYY\") + '')){\n            index= idx;\n          }\n          return index;\n        });\n        if(index!==-1) {\n          state.savedData.splice(index, 1);\n        }\n        state.eventsNumberInMonth = state.savedData.length;\n      }\n      state.eventsNumberInMonth = state.savedData.filter(item=>((moment(item.date, \"DD-MM-YYYY\").format(\"MM-YYYY\")+'')===(moment(state.selectedDate).format(\"MM-YYYY\")+''))).length;\n      return {\n        ...state\n      }\n    },\n\n    removeAllEvents(state, payload) {\n      if(payload.remove) {\n        state.savedData = [];\n      }\n      state.eventsNumberInMonth = state.savedData.filter(item=>((moment(item.date, \"DD-MM-YYYY\").format(\"MM-YYYY\")+'')===(moment(state.selectedDate).format(\"MM-YYYY\")+''))).length;\n      return {\n        ...state\n      }\n    },\n  },\n};\n","/* global */\nimport { init } from '@rematch/core';\nimport createPersistPlugin, { getPersistor } from '@rematch/persist';\nimport createLoadingPlugin from '@rematch/loading';\nimport storage from 'redux-persist/es/storage';\nimport * as models from '../models';\n\n// Create plugins\nconst persistPlugin = createPersistPlugin({\n  version: 2,\n  storage,\n  blacklist: [],\n});\nconst loadingPlugin = createLoadingPlugin({});\n\nconst configureStore = () => {\n  const store = init({\n    models,\n    redux: {\n      middlewares: [],\n    },\n    plugins: [persistPlugin, loadingPlugin],\n  });\n\n  const persistor = getPersistor();\n  const { dispatch } = store;\n\n  return { persistor, store, dispatch };\n};\n\n\nexport default configureStore;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Footer = () => (\n  <footer className=\"bg-dark py-4\">\n    <Container>\n      <Row>\n        <Col>\n          <p className=\"text-center text-secondary\">&copy; CalendarUI. All Rights Reserved.</p>\n        </Col>\n      </Row>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Jumbotron } from 'reactstrap';\n\nconst PageTitle = ({ title }) => (\n  <Jumbotron className=\"bg-dark text-white w-100 pb-2 pt-4 mb-0 rounded-0\">\n    <Container>\n      <h1 className=\"text-center\">{title}</h1>\n    </Container>\n  </Jumbotron>\n);\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nPageTitle.defaultProps = {\n  title: '<!-- Missing Title -->',\n};\n\nexport default PageTitle;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport Footer from '../UI/Footer';\nimport PageTitle from '../UI/PageTitle';\n\nconst Template = ({ pageTitle, children, noPadding }) => (\n  <Fragment>\n    <Helmet>\n      <title>{pageTitle}</title>\n    </Helmet>\n\n    <PageTitle title={pageTitle} />\n    <div className={noPadding ? null : 'py-3 py-md-5'}>\n      {children}\n    </div>\n    <Footer />\n  </Fragment>\n);\n\nTemplate.propTypes = {\n  pageTitle: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  noPadding: PropTypes.bool,\n};\n\nTemplate.defaultProps = {\n  pageTitle: 'ReactStarterKit',\n  noPadding: false,\n};\n\nexport default Template;\n","import React, {Component} from 'react';\nimport {\n    Row, Col, Container,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    faChevronLeft, faChevronRight\n} from '@fortawesome/free-solid-svg-icons';\nimport {connect} from \"react-redux\";\n\nimport moment from 'moment';\n\n\nclass CalendarUIHeader extends Component {\n    onMonthChange(val){\n        this.props.onChangeMonth(val);\n    }\n\n    render(){\n        return (<React.Fragment>\n                <Container>\n                    <Row>\n                        <Col md=\"9\" className=\"mt-3\">\n                            <div className={\"header-title\"}>\n                                {moment(this.props.selectedDate).format( \"MMMM YYYY\")}\n                            </div>\n                        </Col>\n                        <Col md=\"3\" className=\"mt-3\">\n                            <div style={{display: 'flex', flexDirection: 'row', justifyContent: \"space-around\"}}>\n                                <div><FontAwesomeIcon icon={faChevronLeft} onClick={() => this.onMonthChange(-1)} style={{cursor: 'pointer'}}/></div>\n                                {' '}\n                                <div onClick={() => this.onMonthChange(0)} style={{cursor: 'pointer'}}><h3>Today</h3></div>\n                                {' '}\n                                <div><FontAwesomeIcon icon={faChevronRight} onClick={() => this.onMonthChange(1)} style={{cursor: 'pointer'}}/></div>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </React.Fragment>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    selectedDate: state.calendars.selectedDate || {},\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onChangeMonth: dispatch.calendars.changeMonth,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarUIHeader);\n","import React, {Component} from 'react';\nimport {\n    Row, Col, Container,\n} from 'reactstrap';\nimport {connect} from \"react-redux\";\n\nclass CalendarUIWeeks extends Component {\n    render(){\n        return (<React.Fragment>\n                <Container>\n                    <Row className={\"\"}>\n                        <Col>\n                            <h3 className={\"float-right\"}>Sun</h3>\n                        </Col>\n                        <Col>\n                            <h3 className={\"float-right\"}>Mon</h3>\n                        </Col>\n                        <Col>\n                            <h3 className={\"float-right\"}>Tue</h3>\n                        </Col>\n                        <Col>\n                            <h3 className={\"float-right\"}>Wed</h3>\n                        </Col>\n                        <Col>\n                            <h3 className={\"float-right\"}>Thu</h3>\n                        </Col>\n                        <Col>\n                            <h3 className={\"float-right\"}>Fri</h3>\n                        </Col>\n                        <Col>\n                            <h3 className={\"float-right\"}>Sat</h3>\n                        </Col>\n                    </Row>\n                </Container>\n\n            </React.Fragment>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    selectedDate: state.calendars.selectedDate || {},\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onChangeMonth: dispatch.calendars.changeMonth,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarUIWeeks);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\n\nconst initialData = {\n    date: null\n};\n\nclass DayComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialData;\n    }\n\n    componentDidMount() {\n        this.setState({date:this.props.curDate});\n    }\n\n    render(){\n        return (<div>\n\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    selectedDate: state.calendars.selectedDate || {},\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onChangeMonth: dispatch.calendars.changeMonth,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DayComponent);\n","import React, {Component} from 'react';\nimport {connect} from \"react-redux\";\nimport moment from \"moment\";\n\nclass AddTask extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            taskName: \"\",\n            taskDate: \"\",\n            taskDescription: \"\",\n            taskTime: \"\"\n        };\n        this.props.savedData.map(item=>{\n            if(item.date===moment(this.props.selectedDate).format(\"DD-MM-YYYY\")){\n                this.state = {\n                    taskName: item.taskName,\n                    taskDate: item.taskDate,\n                    taskDescription: item.taskDescription,\n                    taskTime: item.taskTime\n                };\n            }else{\n                this.state = {\n                    taskName: \"\",\n                    taskDate: \"\",\n                    taskDescription: \"\",\n                    taskTime: \"\"\n                };\n            }\n            return null;\n        });\n    }\n\n    componentWillUnmount() {\n        this.setState({\n            taskName: \"\",\n            taskDate: \"\",\n            taskDescription: \"\",\n            taskTime: \"\"\n        });\n    }\n\n    handleChange(val, name) {\n        switch (name) {\n            case \"taskName\":\n                this.setState({taskName: val.target.value});\n                break;\n            case \"taskTime\":\n                this.setState({taskTime: val.target.value});\n                break;\n            case \"taskDescription\":\n                this.setState({taskDescription: val.target.value});\n                break;\n            default:\n                break;\n        }\n        this.props.changeDateParam({date: this.props.selectedDate, name: name, val: val.target.value});\n    }\n\n    remove() {\n        this.setState( {\n            taskName: \"\",\n            taskDate: \"\",\n            taskDescription: \"\",\n            taskTime: \"\"\n        });\n        this.props.removeTask({date: this.props.selectedDate});\n        this.props.closeModal();\n    }\n\n    save() {\n        this.props.closeModal();\n        this.setState({\n            taskName: \"\",\n            taskDate: \"\",\n            taskDescription: \"\",\n            taskTime: \"\"\n        });\n    }\n\n    render() {\n        return (\n            <div className={\"task-body\"} ref=\"container\">\n                <div className={\"task-arrow\"}></div>\n                <input type=\"text\" className={\"task-input\"} value={this.state?this.state.taskName:''}\n                       onChange={(val) => this.handleChange(val, \"taskName\")}/>\n                <input type=\"text\" className={\"task-input\"} value={this.state?this.state.taskTime:''}\n                       onChange={(val) => this.handleChange(val, \"taskTime\")}/>\n                <textarea type=\"text\" className={\"task-textarea\"} value={this.state?this.state.taskDescription:''}\n                          onChange={(val) => this.handleChange(val, \"taskDescription\")}/>\n                <div className={\"button-add-task\"}>\n                    <div className={\"button-save\"} onClick={() => this.save()}>сохранить</div>\n                    <div className={\"button-remove\"} onClick={() => this.remove()}>удалить</div>\n                </div>\n            </div>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    savedData: state.calendars.savedData || []\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    changeDateParam: dispatch.calendars.changeDateParam,\n    removeTask: dispatch.calendars.removeTask\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTask);\n","import React, {Component} from 'react';\nimport {\n    Row, Col, Container,\n} from 'reactstrap';\nimport {connect} from \"react-redux\";\n\nimport moment from 'moment';\nimport DayComponent from \"./DayComponent\";\nimport AddTask from \"./AddTask\";\n\nconst initialData = {\n    startDate: null,\n    start: 0,\n    end: 0,\n    total: 0,\n    curDate: null,\n    isShowModal: false,\n    selectedDate: null\n};\n\nclass CalendarUIDays extends Component {\n    constructor(props) {\n        super(props);\n        this.state = initialData;\n    }\n\n    componentDidMount() {\n        this.refreshState(this.props.selectedDate);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (moment(this.state.curDate).format('yyyy-MM-DD') !== moment(this.props.selectedDate).format('yyyy-MM-DD')) {\n            this.refreshState(this.props.selectedDate);\n        }\n    }\n\n    refreshState(curDate) {\n        const d = new Date(curDate);\n        d.setDate(0);\n        let end = this.daysInMonth(d.getMonth(), d.getFullYear()) + 1;\n        let dif = moment(d).weekday() - 1;\n        d.setDate(d.getDate() - dif);\n        this.setState({startDate: d, start: d.getDate(), end: end, total: dif + end, curDate: curDate});\n    }\n\n    daysInMonth(iMonth, iYear) {\n        return new Date(iYear, iMonth, 0).getDate();\n    }\n\n    calcDay(val) {\n        let d = new Date(this.state.startDate);\n        d.setDate(d.getDate() + val);\n        return d.getDate();\n    }\n\n    calcDate(val) {\n        let d = new Date(this.state.startDate);\n        d.setDate(d.getDate() + val);\n        return d;\n    }\n\n    onDayClick(d){\n        if(!this.state.isShowModal) {\n            this.setState({isShowModal: !this.state.isShowModal, selectedDate: d});\n            if (this.state.isShowModal) {\n                this.props.changeDateParam({date: this.props.selectedDate});\n            }\n        }\n    }\n\n    closeModal(){\n        this.setState({isShowModal: false});\n    }\n\n    saveTask(date, taskName, taskTime, taskDescription){\n        this.props.changeDateParam({date:date, name: \"taskName\", val: taskName});\n        this.props.changeDateParam({date:date, name: \"taskTime\", val: taskTime});\n        this.props.changeDateParam({date:date, name: \"taskDescription\", val: taskDescription});\n    }\n\n    isSameDate(d){\n        let ret = (moment(d).format(\"DD-MM-YYYY\")+'')===(moment(this.state.selectedDate).format(\"DD-MM-YYYY\")+'');\n        return ret;\n    }\n\n    render() {\n        return (<React.Fragment>\n                <Container>\n                    {\n                        this.state.total && [...Array(Math.ceil(this.state.total / 7))].map((jitem, j) => (\n                            <Row className={\"\"} key={jitem+' '+j}>\n                                {\n                                    this.state.total && [...Array(7)].map((item, i) => (\n                                        <Col key={i + '-' + (i+j*7)} className={\"day-item\"} onClick={()=>this.onDayClick(this.calcDate(i+j*7))} >\n                                            <h3 className={\"float-right pt-2\"}>{this.calcDay(i+j*7)}</h3>\n                                            <DayComponent curDate={this.calcDate(i+j*7)}/>\n                                                {\n                                                    this.props.savedData.map(item=>(\n                                                        item.date===moment(this.calcDate(i+j*7)).format(\"DD-MM-YYYY\") &&\n                                                        <div className={\"task\"} key={\"taskName\"+i+j}>\n                                                            {item.taskTime+' '+item.taskName}\n                                                        </div>\n                                                    ))\n                                                }\n                                            <div className={(this.state.isShowModal && this.isSameDate(this.calcDate(i+j*7)))?\"visible overlay\":\"invisible\" }>\n                                                <AddTask\n                                                    selectedDate={this.calcDate(i+j*7)}\n                                                    closeModal={()=>this.closeModal()}\n                                                    saveTask={(date, taskName, taskTime, taskDesc)=>this.saveTask(date, taskName, taskTime, taskDesc)}\n                                                />\n                                            </div>\n                                        </Col>\n                                    ))\n                                }\n                            </Row>\n\n                        ))\n                    }\n                </Container>\n\n            </React.Fragment>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    selectedDate: state.calendars.selectedDate || {},\n    savedData: state.calendars.savedData || []\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    changeDateParam: dispatch.calendars.changeDateParam,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarUIDays);\n","import React, {Component} from 'react';\nimport {\n    Row, Container,\n} from 'reactstrap';\nimport {connect} from \"react-redux\";\n\nimport moment from 'moment';\n\n\nclass CalendarFooter extends Component {\n    render(){\n        return (<React.Fragment>\n                <Container>\n                    <Row>\n                        <div>\n                            {this.props.eventsNumberInMonth?this.props.eventsNumberInMonth:0} events on {moment(this.props.selectedDate).format(\"MMMM\")}&nbsp;{\"-\"}&nbsp;\n                        </div>\n                        <div className={\"button-remove\"} onClick={()=>this.props.removeAllEvents({remove: true})}>\n                            {\" \"}Remove all\n                        </div>\n                    </Row>\n                </Container>\n\n            </React.Fragment>\n        );\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    selectedDate: state.calendars.selectedDate || {},\n    savedData: state.calendars.savedData || [],\n    eventsNumberInMonth: state.calendars.eventsNumberInMonth || 0\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    onChangeMonth: dispatch.calendars.changeMonth,\n    removeAllEvents: dispatch.calendars.removeAllEvents\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalendarFooter);\n","import React from 'react';\nimport {\n  Container,\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\nimport Template from './Templates/Dashboard';\nimport CalendarUIHeader from \"./CalendarUIHeader/CalendarUIHeader\";\nimport CalendarUIWeeks from \"./CalendarUIWeeks/CalendarUIWeeks\";\nimport CalendarUIDays from \"./CalendarUIDays/CalendarUIDays\";\nimport CalendarFooter from \"./CalendarFooter/CalendarFooter\";\n\nconst CalendarUI = () => (\n  <Template pageTitle=\"Calendar UI\" noPadding>\n    <React.Fragment>\n      <Container>\n        <CalendarUIHeader />\n      </Container>\n      <Container>\n        <CalendarUIWeeks />\n      </Container>\n      <Container>\n        <CalendarUIDays />\n      </Container>\n      <Container>\n        <CalendarFooter />\n      </Container>\n    </React.Fragment>\n  </Template>\n);\n\nexport default withRouter(CalendarUI);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\n// import { Link } from 'react-router-dom';\n\nconst Error = ({ title, content }) => (\n  <Row className=\"py-5 my-5\">\n    <Col md={{ size: 4, offset: 4 }}>\n      <h2 className=\"text-center\">{title}</h2>\n      <p className=\"text-center\">{content}</p>\n      {/* <p className=\"text-center\"><Link to=\"/\" className=\"btn btn-primary\">Go Home</Link></p> */}\n    </Col>\n  </Row>\n);\n\nError.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.string,\n};\n\nError.defaultProps = {\n  title: 'Uh oh',\n  content: 'An unexpected error came up',\n};\n\nexport default Error;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// Containers\n\n// Components\nimport Calendar from '../components/CalendarUI';\nimport Error from '../components/UI/Error';\n\n/**\n * All of the routes\n */\nconst Index = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Calendar} />\n\n    {/* 404 */}\n    <Route\n      render={(props) => (\n        <Error {...props} title=\"404\" content=\"Sorry, the route you requested does not exist\" />\n      )}\n    />\n  </Switch>\n);\n\nexport default Index;\n","import React from 'react';\nimport { Row, Col, Progress } from 'reactstrap';\n\nconst Loading = () => (\n  <Row>\n    <Col md={{ size: 6, offset: 3 }}>\n      <div className=\"page-is-loading\">\n        <Progress bar animated value=\"100\">Loading</Progress>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport default Loading;\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n\nimport configureStore from './store/index';\nimport * as serviceWorker from './lib/service-worker';\nimport Routes from './routes/index';\n\n// Components\nimport Loading from './components/UI/Loading';\n\n// Load css\nimport './assets/styles/style.scss';\n\nconst { persistor, store, dispatch } = configureStore();\n// persistor.purge(); // Debug to clear persist\n\nconst Root = () => (\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <Router dispatch={dispatch} store={store}>\n        <Routes />\n      </Router>\n    </PersistGate>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}